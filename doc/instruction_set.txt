DCC GDP-8 Instruction Set
=========================

A 64 Bit, 24 Bit Address, Byte-based Flat-Address Model, Load Store Architecture Virtual Machine.

Instructions:
	OP:	TYPE:	DESCRIPTION:
	HLT	Z	Halt
	INT	U	Trigger a software Interrupt, IV=$ARG
	EUM	LJC	Enter Usermode at $ADDR
	IRET	Z	Return from Interrupt Service Routine
	LOAD	LS	Load from $ADDR
	LOADI	LS	Indirect load from $ADDR
	ST	LS	Store to $ADDR
	STI	LS	Indirect store to $ADDR
	ILOAD	ISL	Load from $ADD + %INDEX
	ILOADI	ISL	Indirect load from $ADD + %INDEX
	IST	ILS	Store to $ADDR + %INDEX
	ISTI	ILS	Indirect store to $ADDR + %INDEX
	SAVE	Z	Push all register to stack
	RSTR	Z	Pop all register from stack
	ADD	D	Add
	SUB	D	Subtract
	INC	U	Increment
	DEC	U	Decrement
	MUL	D	Multipy
	DIV	D	Divide
	MOD	D	Modulo
	AND	D	And
	NAND	D	Not-And
	OR	D	Or
	NOT	U	Not
	XOR	D	XOR
	ROTR	U	Rotate Right
	ROTL	U	Rotate Left
	SHR	U	Shift Right
	SHL	U	Shift Left
	SWP	D	Swap content of register
	PUSH	U	Push
	POP	U	Pop
	CMP	D	Compare (Sets / Clears E and G)
	TCH	U	Touch (Set / Clear Z and N)
	RST	Z	Reset all flags
	JMP	JC	Jump to $ADDR
	SJMP	SJC	Jump to $ADDR
	LJMP	LJC	Jump to $ADDR
	RJMP	RCJ	Jump to %PC + $OFFSET
	JMS	JC	Jump to Subroutine $ADDR
	SJMS	SJC	Jump to Subroutine $ADDR
	LJMS	LJC	Jump to Subroutine $ADDR
	RJMS	RCJ	Jump to Subroutine %PC + $OFFSET
	J*	JC	Jump to $ADDR if the flag is true
	SJ*	SJC	Jump to $ADDR if the flag is true
	LJ*	LJC	Jump to $ADDR if the flag is true
	RJ*	RCJ	Jump to %PC + $OFFSET if the flag is true
	CALL	JC	Call $ADDR
	SCALL	SJC	Call $ADDR
	LCALL	LJC	Call $ADDR
	RCALL	RCJ	Call %PC + $OFFSET
	C*	JC	Call $ADDR if the flag is true
	SC*	SJC	Call $ADDR if the flag is true
	LC*	LJC	Call $ADDR if the flag is true
	RC*	RCJ	Call %PC + $OFFSET if the flag is true
	RET	Z	Return
	IO	IO	IO Operation


Registers:
	00~FF	(64 Bit):	General Purpose Register
	STATUS	(16 Bit):	Status
	PC	(24 Bit):	Program Counter
	SP	(24 Bit):	Stack Pointer
	IV	( 8 Bit):	Interrupt Vector
	IPC	(24 Bit):	Saved PC from Interrupt
	

Instruction Formats:

Zero Operand Instruction Format (Z):	(1 Byte)
+---+---+---+---+---+---+---+---+
|              O P              |
+---+---+---+---+---+---+---+---+

One Operand Register Instruction Format (U):	(2 Bytes)
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|              O P              |           A   R   G           |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
(ARG can be a register number or immediate operand depending on the instruction)

Two Operand Register Instruction Format (D):	(3 Bytes)
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|              O P              |           D   S   T           |           S   R   C           |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+

Jump/Call Instruction (JC):	(3 Bytes)
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|             O   P             |                         A   D   D   R                         |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+

Short Jump/Call Instruction (SJC):	(2 Bytes)
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|             O   P             |         A   D   D   R         |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+

Long Jump/Call Instruction (LJC):	(5 Bytes)
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|             O   P             |                                           A   D   D   R                                       |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+

Relative Jump/Call Instruction (RJC):	(3 Bytes)
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|             O   P             |                     O   F   F   S   E   T                     |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+

LOAD / STORE Instruction Format (LS):	(5 Bytes)
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|             O   P             |           R   E   G           |  =>
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|                                           A   D   D   R                                       |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+

Indexed (ILS):			(6 Bytes)
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|             O   P             |           R   E   G           |       I   N   D   E   X       |  =>
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|                                     O   F   F   S   E   T                                     |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+

IO Instruction Format (IO):		(4 Bytes)
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 |           D   E   V           |             O   P             |           R   E   G           |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+

Status Register Format:
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 |                               |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| B | O | N | Z | E | G | U | 1 |                               |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+

B:	The Bit (Can be Carry Flag, or just a 1 Bit register)
O:	Overflow
N:	Negative
Z:	Zero
E:	Equal
G:	Greater Than
U:	Usermode
I:	Interrupt
